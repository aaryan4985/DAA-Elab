#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int arr[1001][1001];
int dp[1001][1001];
const int mod = 1e9+7;
void solve(){
 cout<<"for(i=0;i<N;i++)";}
long int decrease_path(int i , int j,int n)
{
 if(arr[i][j]==1) return 1;
 if(dp[i][j]!=-1) return dp[i][j];
 long int a = (i>0 && arr[i-1][j]<arr[i][j])?decrease_path(i-1,j,n):0;
 long int b = (j>0 && arr[i][j-1]<arr[i][j])?decrease_path(i,j-1,n):0;
 long int c = (i<n-1 && arr[i+1][j]<arr[i][j])?decrease_path(i+1,j,n):0;
 long int d = (j<n-1 && arr[i][j+1]<arr[i][j])?decrease_path(i,j+1,n):0;
 dp[i][j] = a+b+c+d+1;
 dp[i][j]%=mod;
 return dp[i][j];
}
int main()
{
 cin.tie(NULL);
 ios_base::sync_with_stdio(false);
 int n;
 cin>>n;
 for(int i = 0;i<n;i++)
 {
 for(int j = 0;j<n;j++)
 {
 cin>>arr[i][j];
 }
 }
 memset(dp,-1,sizeof(dp));
 long int count = 0;
 for(int i = 0;i<n;i++)
 {
 for(int j = 0;j<n;j++)
 {
 long int a = decrease_path(i,j,n);
 count+=a;
 count%=mod;
 }
 }
 cout<<count<<'\n';
}